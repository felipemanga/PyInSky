<script type='text/javascript'>

  var Module = {
        preRun: [],
        postRun: [],
        print: (function() {
            var element = document.getElementById('output');
            return function(text) {
		if (arguments.length > 1)
		    text = Array.prototype.slice.call(arguments).join(' ');
		if (!element){
		    console.log(text);
		    return;
		}
		
		text.split("\n")
		    .forEach( line => {
			let e;
			while( element.children.length > 20 ){
			    e = element.firstElementChild;
			    element.removeChild(e);
			}

			if(!e)
			    e = document.createElement("div");

			let match = line.match(/in ([a-zA-Z0-9_]+\.[pP][yY]), line ([0-9]+):$/);
			if( match && source[match[1]] ){
			    e.classList.add("source-ref");
			    e.onclick = _ => {
				showFile( match[1], match[2] );
			    };
			}else{
			    e.classList.remove("source-ref");
			    e.onclick = null;
			}

			e.textContent = line;
			element.appendChild(e);
		    } );

		element.scrollTop = element.scrollHeight; // focus on bottom
	    };
        })(),
        printErr: (function() {
          var element = document.getElementById('output');
          return function(text) {
          if (arguments.length > 1) text = Array.prototype.slice.call(arguments).join(' ');
          element.textConent += text + "\n";
          };
        })(),
  	canvas: null,
        setStatus: function(text) {
  	console.log(text);
        },
        totalDependencies: 0,
        monitorRunDependencies: function(left) {
          this.totalDependencies = Math.max(this.totalDependencies, left);
          Module.setStatus(left ? 'Preparing... (' + (this.totalDependencies-left) + '/' + this.totalDependencies + ')' : 'All downloads complete.');
        }
      };
      Module.setStatus('Downloading...');
      window.onerror = function(event) {
        // TODO: do not warn on ok events like simulating an infinite loop or exitStatus
        Module.setStatus('Exception thrown, see JavaScript console');
        Module.setStatus = function(text) {
          if (text) Module.printErr('[post-exception status] ' + text);
        };
      };
</script>
<script async type="text/javascript" src="micropython.js"></script>
